<?xml version="1.0"?>

<project name="genedb-libs" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>This build file describes a set of classpaths and targets "exported"
    from this project, and common properties</description>

  <dirname property="imported.basedir.libs" file="${ant.file.genedb-libs}"/>

  <!-- Paths/Properties -->
  <property name="build.dir" value="ant-build" />
  <property name="dist.dir" value="${build.dir}/dist" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="test-classes.dir" value="${build.dir}/test-classes" />


  <property name="lib-dir" value="${imported.basedir.libs}/lib" />
  <property name="lib.dir" value="lib/" />

  <path id="aspectj-tools-classpath">
    <pathelement location="${imported.basedir.libs}/lib/com.springsource.org.aspectj.weaver-1.6.5.RELEASE.jar"/>
    <pathelement location="${imported.basedir.libs}/lib/com.springsource.org.aspectj.runtime-1.6.5.RELEASE.jar"/>
    <pathelement location="${imported.basedir.libs}/lib/com.springsource.org.aspectj.tools-1.6.5.RELEASE.jar"/>
  </path>


  <!-- Classpaths -->
  <path id="aspect.path">
    <pathelement location="${imported.basedir.libs}/lib/*.jar"/>
  </path>


  <!-- General targets -->

  <target name="lib-populate-lib-dir" depends="check.lib-lib-uptodate" unless="libs.lib-uptodate">
    <ivy:settings file="${imported.basedir.libs}/ivysettings.xml" />
    <populate directory="genedb-libs"/>
    <!-- <ivy:retrieve conf="default"/> -->
  </target>

    <target name="check.lib-lib-uptodate" depends="libs-init" if="libs.ivy-timestamp-exists">
        <uptodate property="libs.lib-uptodate" srcfile="${imported.basedir.libs}/ivy.xml" targetfile="${imported.basedir.libs}/lib/ivy.timestamp.txt" />
    </target>


    <target name="libs-init">
        <init-target project="libs" />
    </target>

  <target name="populate-lib-dirs">
      <antcall target="lib-populate-lib-dir"/>
  </target>

  <target name="clean-all">
      <echo message="Deleting ${lib-dir}/*.jar"/>
      <echo message="Deleting ${lib-dir}/license-*.txt"/>
      <delete>
          <fileset dir="${lib-dir}">
              <include name="*.jar"/>
              <include name="license-*.txt"/>
              <include name="ivy.timestamp.txt"/>
          </fileset>
      </delete>
      <clean-target project="access" topdir="${imported.basedir.libs}/../genedb-access"/>
      <clean-target project="db" topdir="${imported.basedir.libs}/../genedb-db"/>
      <clean-target project="domain" topdir="${imported.basedir.libs}/../genedb-domain"/>
      <clean-target project="query" topdir="${imported.basedir.libs}/../genedb-query"/>
      <clean-target project="util" topdir="${imported.basedir.libs}/../genedb-util"/>
      <clean-target project="web" topdir="${imported.basedir.libs}/../genedb-web"/>
      <clean-target project="Jogra" topdir="${imported.basedir.libs}/../Jogra"/>
      <clean-target project="Medusa" topdir="${imported.basedir.libs}/../Medusa"/>
  </target>

  <!-- The following target may look stupid, but it's actually extremely cunning. :-)

       Normally when an ant property is set, it can't be changed thereafter:
       subsequent attempts to set the value are silently ignored. However,
       antcall parameters are an exception. They behave mostly like properties,
       except that their values exist only for the duration of the antcall.
       So, by wrapping <ivy:retrieve/> in a target, it's possible to make
       multiple calls to it with different configuration values. (This is
       precisely what the "populate" macro does, of course.)
    -->
  <target name="ivy-retrieve">
    <ivy:settings file="${imported.basedir.libs}/ivysettings.xml" />
    <setproxy proxyhost="wwwcache.sanger.ac.uk" proxyport="3128"/>
    <ivy:retrieve conf="default"/>
  </target>


  <!-- Macro definitions -->

  <macrodef name="populate">
    <attribute name="directory"/>
    <sequential>
      <delete>
          <fileset dir="../@{directory}/lib">
              <include name="*.jar"/>
              <include name="license-*.txt"/>
              <include name="ivy.timestamp.txt"/>
          </fileset>
      </delete>
      <mkdir dir="../@{directory}/lib" />
      <antcall target="ivy-retrieve">
        <param name="ivy.lib.dir"  value="../@{directory}/lib"/>
        <param name="ivy.dep.file" value="../@{directory}/ivy.xml"/>
      </antcall>
      <touch file="../@{directory}/lib/ivy.timestamp.txt" />
    </sequential>
  </macrodef>

  <macrodef name="init-target" description="Create initial build structure">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <sequential>
      <mkdir dir="@{topdir}/${build.dir}" />
      <mkdir dir="@{topdir}/${dist.dir}" />
      <mkdir dir="@{topdir}/${classes.dir}" />
      <mkdir dir="@{topdir}/${test-classes.dir}" />
      <mkdir dir="@{topdir}/${lib.dir}" />
      <available property="@{project}.ivy-timestamp-exists" file="@{topdir}/${lib.dir}/ivy.timestamp.txt" />
    </sequential>
  </macrodef>

  <macrodef name="clean-target" description="Remove all build artifacts">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <sequential>
      <delete dir="@{topdir}/${build.dir}" includeEmptyDirs="true" />
      <delete dir="@{topdir}/${lib.dir}" includeEmptyDirs="true" />
      <delete dir="@{topdir}/${test-classes.dir}"/>
    </sequential>
  </macrodef>


  <macrodef name="check-config-target" description="Check config target supplied">
    <attribute name="project" />
    <sequential>
      <fail message="The 'config' property must be set" unless="config"/>
      <available file="${imported.basedir.@{project}}/property-file.${config}" property="@{project}-config-file-exists"/>
      <fail message="The file ${imported.basedir.@{project}}/property-file.${config} does not exist" unless="@{project}-config-file-exists"/>
    </sequential>
  </macrodef>

  <macrodef name="compile-target" description="Compile a module">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <attribute name="classpathref" default="@{project}-classpath"/>
    <sequential>
      <!-- <echo message="genedb-libs.compile-target: src.dir is '@{topdir}/src', output is '@{topdir}/${classes.dir}', classpathref is '@{classpathref}'" /> -->
      <javac srcdir="@{topdir}/src" includes="**/*.java" debug="true" source="1.6" target="1.6"
             destdir="@{topdir}/${classes.dir}" classpathref="@{classpathref}" />
      <!-- <echo>Compile finished</echo> -->
    </sequential>
  </macrodef>

  <macrodef name="tests-target" description="Test a module">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <attribute name="classpathref" default="@{project}-tests-classpath"/>
    <sequential>
      <javac srcdir="@{topdir}/test" includes="**/*.java" debug="true"
                 destdir="@{topdir}/${test-classes.dir}"
                 classpathref="@{classpathref}" />

      <junit printsummary="on"
        fork="false"
        haltonfailure="false"
        failureproperty="tests.failed"
        showoutput="true">
        <classpath refid="@{classpathref}"/>
        <formatter type="brief" usefile="false"/>
        <batchtest>
            <fileset dir="@{topdir}/${test-classes.dir}">
                <include name="**/*Test.*"/>
            </fileset>
        </batchtest>
      </junit>
      <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
      </fail>
    </sequential>
  </macrodef>

  <macrodef name="compile-and-iajc-target" description="Compile and weave a module">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <attribute name="classpathref" default="@{project}-classpath"/>
    <sequential>
      <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
        <classpath refid="aspectj-tools-classpath"/>
      </taskdef>
      <iajc
        sourceRoots="@{topdir}/src"
        source="1.6"
        target="1.6"
        verbose="true"
        destDir="@{topdir}/${classes.dir}"
        classpathref="@{classpathref}" />
    </sequential>
  </macrodef>

  <macrodef name="iajc-target" description="Compile-time aspectj weaving">
      <attribute name="project" />
      <attribute name="directory" default="${imported.basedir.@{project}}/${classes.dir}"/>
      <attribute name="from-directory" default="@{directory}"/>
      <attribute name="to-directory" default="@{directory}"/>
      <attribute name="classpathref" default="@{project}-classpath"/>
    <sequential>
      <antcall target="lib-populate-lib-dir" />
      <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
        <classpath refid="aspectj-tools-classpath"/>
      </taskdef>
      <iajc
        verbose="false" nowarn="true"
        inpath="@{from-directory}"
        aspectpathref="@{classpathref}"
        classpathRef ="@{classpathref}"
        destdir="@{to-directory}" maxmem="1024M" fork="true">

       <forkclasspath refid="aspectj-tools-classpath"/>
      </iajc>
    </sequential>
  </macrodef>

  <macrodef name="jar-target" description="Make a distribution JAR">
    <attribute name="project" />
    <attribute name="topdir" default="${imported.basedir.@{project}}"/>
    <attribute name="jar" default="genedb-@{project}.jar" />
    <element name="extra-elements" optional="true" implicit="true"/>
    <sequential>
      <delete file="@{topdir}/${dist.dir}/@{jar}" />
      <jar jarfile="@{topdir}/${dist.dir}/@{jar}" basedir="@{topdir}/${classes.dir}"
           excludes="**/*Test.class">
        <extra-elements/>
      </jar>
    </sequential>
  </macrodef>

</project>
