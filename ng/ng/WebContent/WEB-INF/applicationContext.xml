<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"

    default-init-method="postConstruction">

    <context:component-scan base-package="org.gmod.schema.mapped, org.genedb.web.mvc.controller.analysis, org.genedb.web.mvc.controller, org.genedb.web.mvc.controller.download, org.genedb.querying.core" />
    <context:spring-configured/>
    <!-- <context:load-time-weaver/> -->
    <context:property-placeholder location="classpath:project.properties" />
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
    <tx:annotation-driven mode="aspectj"/>

<!--
    <security:http auto-config="true">
        <security:intercept-url pattern="/includes/**" filters="none"/> -->
        <!-- <security:intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/> -->
    <!--	<security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
    	<security:intercept-url pattern="/**" access="ROLE_USER" />
    	<security:remember-me key="AmyPond"/> -->
    	<!-- <security:form-login login-page='/login.jsp' default-target-url='/Homepage' always-use-default-target="true" authentication-failure-url="/login.jsp?login_error=1"/> -->
	<!-- </security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			--> <!-- For testing just use the simpler password system --><!--
			<security:user-service>
				<security:user name="art" password="art" authorities="ROLE_USER, ROLE_ADMIN"/>
				<security:user name="user" password="user" authorities="ROLE_USER"/>
		</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
-->

    <!-- ========================= MESSAGE SOURCE DEFINITION ========================= -->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>



    <!-- ========================= MAPPING DEFINITIONS ========================= -->



    <bean name="resultsCacheFactory" class="org.genedb.web.mvc.model.ResultsCacheFactory">
        <property name="rootDirectory" value="${resultsCacheDirectory}"/>
        <property name="readOnly" value="false" />
        <property name="allowCreate" value="true" />
    </bean>


    <bean id="taxonNodeArrayPropertyEditor" class="org.genedb.db.taxon.TaxonNodeArrayPropertyEditor">
        <property name="taxonNodeManager" ref="taxonNodeManager" />
    </bean>


  <bean name="taxonNodeListFormatter" class="org.genedb.db.taxon.TaxonNodeListFormatter">
  	<property name="taxonNodeManager" ref="taxonNodeManager" />
  </bean>

    <bean id="taxonNodeManager" class="org.genedb.db.taxon.TaxonNodeManager">
        <property name="phylogenyDao" ref="phylogenyDao" />
        <!-- <property name="sessionFactory" ref="sessionFactory" /> -->
    </bean>

    <bean id="taxonUtils" class="org.genedb.db.taxon.TaxonUtils">
        <property name="tnm" ref="taxonNodeManager" />
    </bean>

    <bean id="sequenceDao" class="org.genedb.db.dao.SequenceDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="cvDao" class="org.genedb.db.dao.CvDao">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="generalDao" ref="generalDao" />
    </bean>

    <bean id="generalDao" class="org.genedb.db.dao.GeneralDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="organismDao" class="org.genedb.db.dao.OrganismDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="phylogenyDao" class="org.genedb.db.dao.PhylogenyDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="pubDao" class="org.genedb.db.dao.PubDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>


    <!-- DataSource Property -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url"><value>jdbc:postgresql://${dbhost}:${dbport}/${dbname}</value></property>
        <property name="username"><value>${dbuser}</value></property>
        <property name="password"><value>${dbpassword}</value></property>
    </bean>

    <!-- Database Property -->
    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="properties">
        <props>
            <prop key="hibernate.hbm2dll.auto">validate</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            <prop key="hibernate.bytecode.provider">javassist</prop>
            <prop key="hibernate.jdbc.batch_size">20</prop>
            <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
            <prop key="hibernate.search.default.indexBase">${lucene.indexDirectory}</prop>
        </props>
     </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
         <property name="sessionFactory" ref="sessionFactory" />
     </bean>

    <bean id="sessionFactory"
        class="org.gmod.schema.cfg.ChadoSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <property name="annotatedPackages">
            <list>
                <value>org.gmod.schema.mapped</value>
                <value>org.gmod.schema.feature</value>
            </list>
        </property>
    </bean>

    <bean name="organismHeirachy" class="org.gmod.schema.cfg.OrganismHeirachy" init-method="afterPropertiesSet">
      <property name="beanName" value="sessionFactory" />
    </bean>


    <bean name="luceneIndexFactory" class="org.genedb.querying.core.LuceneIndexFactory">
        <property name="luceneIndexList">
        <list>
            <bean class="org.genedb.querying.core.LuceneIndex">
                <property name="indexDirectoryName" value="${lucene.indexDirectory}" />
                <property name="indexName" value="org.gmod.schema.mapped.Feature" />
            </bean>
        </list>
        </property>
    </bean>

    <bean name="populateLuceneIndices" class="org.genedb.web.mvc.model.PopulateLuceneIndices">
        <property name="configurableGeneDBSessionFactoryBean" ref="configurableGeneDBSessionFactoryBean" />
    </bean>



    <bean name="configurableGeneDBSessionFactoryBean" class="org.genedb.web.mvc.model.ConfigurableGeneDBSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="org.gmod.schema.mapped,org.gmod.schema.feature" />
        <property name="properties">
            <props>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
                <prop key="hibernate.search.default.indexBase">${lucene.indexDirectory}</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
            </props>
        </property>
        <!-- <property name="listeners">
            <map>
                <entry key="post-insert" value-ref="fullTextIndexEventListener" />
                <entry key="post-update" value-ref="fullTextIndexEventListener" />
                <entry key="post-delete" value-ref="fullTextIndexEventListener" />
            </map>
        </property> -->
    </bean>

    <bean name="fullTextIndexEventListener" class="org.hibernate.search.event.FullTextIndexEventListener" />

</beans>
