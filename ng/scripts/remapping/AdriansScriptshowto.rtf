{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25260\viewh13720\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 WARNING! The use cases for this script thus far have been very specific, it is adviseable that this script be first tested on a test database to ensure that all gene models are transferred before an attempt is made to use this on pathogens.\
\
1. Copy unflattened EMBL format files to the same directory (eg. 'Chadoloading')\
\
2. Create a second directory called 'Fasta', and write out fasta versions of the EMBLs (seqret, sequenceformat.converter.pl, etc) to this folder.\
\
3. Execute RemappedContigLoader in this directory. This loads the fasta sequences of the new chromosomes onto db - hard coded into script.\
\

\b0 groovy -cp com.springsource.org.postgresql.jdbc4-8.3.604.jar  RemappedContigLoader [organism_id] [name of files]\

\b \
4. In the 'load' directory, run Extractinfo. This script will read in the IDs from an EMBL file and reduce them down to a simple ID, type, f-min and f-max, written out into 'mapping.out'\
\

\b0 groovy Extractinfo2 [name of files e.g. L*] > mapping.out\
\
(groovy ExtractInfo2.groovy L* > mapping.out) >& mapping.out.err\
\

\b 5. This next step generates the sql script to migrate the annotation from the old version to a new one. It also generates a log file in the same output, so this has to be removed and kept as a log file before the sql can be run.\

\b0 \
groovy -cp com.springsource.org.postgresql.jdbc4-8.3.604.jar MultiChromSimpleLocationRemapper  [mapping.out] [names of files] > Script\
\
Copy <script> to log\
\
Get rid of SQL from log\
\
Edit <script>, remove everything after 'match'\
\
Read in <script> in psql\
\

\b The final step is to read the sql script in.
\b0 \
\
psql -p10140 -Umr7@sanger.ac.uk mr7-2 < script\
\
\
\
\
}