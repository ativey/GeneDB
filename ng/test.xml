<!-- Ant test targets for genedb-access. Imported by build.xml -->

<project name="ng.test">

    <import file="build.xml"/>

    <path id="test-classpath">
        <path refid="allandtest"/>
    </path>

	<path id="allandtest2">
	        <!--<path refid="classpathref"/>-->
	    <pathelement location="ant-build/dist/ng.jar"/>
        <pathelement location="ant-build/dist/test.jar"/>
	    <fileset dir="WebContent/WEB-INF/lib/">
	      <include name="*.jar"/>
	    </fileset>
	    <fileset dir="lib-compiletime/">
	      <include name="*.jar"/>
	    </fileset>
	</path>


	<path id="allandtest3">
        <path refid="allandtest2"/>
        <pathelement location="${build.dir}/resources"/>
        <pathelement location="resources"/>
	</path>


    <target name="make-test-jar" depends="fulljar">
        <copy todir="${build.dir}/test">
            <fileset dir="test"/>
        </copy>

        <javac srcdir="${build.dir}/test"
            destdir="${build.dir}/test-classes"
            encoding="utf-8" debug="on">

            <classpath refid="run-classpathref" />
        </javac>


    	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
    		<classpath refid="aspectj-tools-classpath"/>
    	</taskdef>

    		<iajc
        verbose="true" nowarn="false"
        inpath="${build.dir}/test-classes"
        aspectpathref="run-classpathref"
        classpathRef ="run-classpathref"
        destdir="${build.dir}/test-classes" maxmem="1024M" fork="true">

    			<forkclasspath refid="aspectj-tools-classpath"/>
    		</iajc>

        <copy todir="${build.dir}/test-classes" overwrite="true"
            file="${build.dir}/test/log4j.test.properties"/>

        <copy todir="${build.dir}/test-classes">
            <fileset dir="resources/test-classpath">
            	<include name="**/*.xml"/>
            	</fileset>
        </copy>


        <jar jarfile="${dist.dir}/test.jar">
            <fileset dir="${build.dir}/test-classes" />
            <manifest>
                <attribute name="Implementation-Title" value="Chado Interface Test Code"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

	  <target name="run-util-tests" depends="fulljar, compile-all">
	    <junit printsummary="withOutAndErr" haltonfailure="yes" fork="true" showoutput="true">
	      <classpath>
	        <path refid="allandtest" />
	      </classpath>
	      <batchtest>
	        <fileset dir="${imported.basedir.util}/ant-build/test-classes">
	          <include name="**/*Test.*" />
	        </fileset>
	      </batchtest>
	    </junit>
	  </target>

	   <target name="does-skeleton-database-exist">
	        <available property="db.skeleton.exists" file="${ng.directory}/test-data/hsqldb/skeleton.data"/>
	    </target>
	    <target name="make-skeleton-database-if-necessary" depends="does-skeleton-database-exist" unless="db.skeleton.exists">
	        <antcall target="make-skeleton-database"/>
	    </target>
	    <target name="make-skeleton-database" depends="fulljar,make-test-jar">
	        <java fork="true" dir="${ng.directory}" output="make-skeleton-database.txt"
	                maxmemory="256m" failonerror="true" classname="org.genedb.db.test.tools.BuildTestDatabase">
	            <classpath refid="allandtest"/>
	            <jvmarg line="-server" />
	            <arg value="${source.url}"/>
	            <arg value="${source.username}"/>
	            <arg value="${source.password}"/>
	            <arg value="skeleton"/>
	        </java>
	    </target>

	    <target name="make-pfalciparum-database-if-necessary" depends="does-pfalciparum-database-exist" unless="db.pfalciparum.exists">
	        <antcall target="make-pfalciparum-database"/>
	    </target>
	    <target name="does-pfalciparum-database-exist">
	        <available property="db.pfalciparum.exists" file="${ng.directory}/test-data/hsqldb/pfalciparum.data"/>
	    </target>
	    <target name="make-pfalciparum-database" depends="prompt-for-password,make-test-jar">
	        <java fork="true" dir="${ng.directory}" output="make-pfalciparum-database.txt"
	                maxmemory="1024m" failonerror="true" classname="org.genedb.db.test.tools.BuildTestDatabase">
	            <classpath refid="allandtest"/>
	            <jvmarg line="-server" />
	            <arg value="${source.url}"/>
	            <arg value="${source.username}"/>
	            <arg value="${source.password}"/>
	            <arg value="pfalciparum"/>
	            <arg value="27"/>
	        </java>
	    </target>

    <target name="copy-pfalciparum-database" depends="make-pfalciparum-database-if-necessary">
        <copy todir="test/access-data" overwrite="true">
            <fileset dir="test-data/hsqldb" includes="pfalciparum.*"/>
        </copy>
    </target>

    <target name="copy-skeleton-database" depends="make-skeleton-database-if-necessary">
        <copy todir="test/access-data" overwrite="true">
            <fileset dir="test-data/hsqldb" includes="skeleton.*"/>
        </copy>
    </target>

    <target name="run-db-tests" depends="make-test-jar,make-pfalciparum-database-if-necessary">
      <junit printsummary="yes" haltonfailure="yes" fork="true">
        <jvmarg value="-Xmx512m"/>
        <jvmarg value="-client"/>
        <classpath>
            <path refid="allandtest"/>
        </classpath>
        <sysproperty key="build.tests" value="${build.tests}"/>
        <formatter type="brief" usefile="false" />
        <batchtest>
          <fileset dir="${build.dir}/test-classes">
            <include name="**/*Test.*" />
          	<exclude name="**/org/genedb/db/loading/**/*Test.*" />
          </fileset>
        </batchtest>
      </junit>
    </target>

    <target name="all-tests"
    	depends="include-properties, file-test,location-test,embl-test,ortho-test,domainloader-test"/>

	<target name="include-properties">
    	<copy tofile="${build.dir}/resources/project.properties" overwrite="true"
        	file="property-file.${config}"/>
	</target>



    <target name="file-test">
        <junit showoutput="yes" printsummary="yes" haltonfailure="yes" fork="true">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.FastaFileTest"/>
            <test name="org.genedb.db.loading.EmblFileTest"/>
        </junit>
    </target>

    <target name="location-test">
        <junit showoutput="yes" printsummary="yes" haltonfailure="yes" fork="true">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.EmblLocationTest"/>
        </junit>
    </target>

	<!--
    <target name="copy-skeleton-database" depends="genedb-db.does-skeleton-database-exist">
        <fail unless="db.skeleton.exists" message="The skeleton test database does not exist in genedb-db" />
        <copy todir="${imported.basedir.access}/test/data" overwrite="true">
            <fileset dir="${imported.basedir.db}/test-data/hsqldb" includes="skeleton.*"/>
        </copy>
    </target>
    <target name="copy-pfalciparum-database" depends="genedb-db.does-pfalciparum-database-exist">
        <fail unless="db.pfalciparum.exists" message="The P. falciparum test database does not exist in genedb-db" />
        <copy todir="${imported.basedir.access}/test/data" overwrite="true">
            <fileset dir="${imported.basedir.db}/test-data/hsqldb" includes="pfalciparum.*"/>
        </copy>
    </target>
    -->

    <target name="embl-test">
        <antcall target="run-specific-embl-test"><param name="subtest" value="Berghei"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Mansoni"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Synthetic"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Reload"/></antcall>
    </target>
    <!-- If you antcall a target that has dependencies, all the dependencies are executed
         EVEN IF they have already been executed. Therefore we have an internal target
         run-specific-embl-test, with no dependencies, that we antcall; and an external
         target specific-embl-test that does have dependencies
    <target name="specific-embl-test" depends="access-fulljar,compile-tests,run-specific-embl-test"/>
	-->

    <target name="run-specific-embl-test">
        <antcall target="copy-skeleton-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.EmblLoader${subtest}Test"/>
        </junit>
    </target>

    <target name="ortho-test">
        <antcall target="run-specific-ortho-test"><param name="subtest" value="ImplicitCluster"/></antcall>
        <antcall target="run-specific-ortho-test"><param name="subtest" value="Unclustered"/></antcall>
        <antcall target="run-specific-ortho-test"><param name="subtest" value="Clustered"/></antcall>
    </target>

    <target name="specific-ortho-test" depends="run-specific-ortho-test"/>

    <target name="run-specific-ortho-test">
        <antcall target="copy-skeleton-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.OrthologueLoader${subtest}Test"/>
        </junit>
    </target>

    <!-- Rfam loader test -->
    <target name="rfam-test">
        <antcall target="copy-pfalciparum-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.auxiliary.RfamLoaderTest"/>
        </junit>
    </target>


	<!-- HTH Loader Test -->
    <target name="hth-test">
        <antcall target="copy-pfalciparum-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
        	 <classpath refid="allandtest3"/>
        	 <formatter type="brief" usefile="false" />
        	 <test name="org.genedb.db.loading.auxiliary.HTHLoaderTest"/>
        </junit>
    </target>

	<!-- Domain Loader Test (interpro/pfam/prosite) -->
    <target name="domainloader-test">
        <antcall target="copy-pfalciparum-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="allandtest3"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.auxiliary.DomainLoaderTest"/>
        </junit>
    </target>

</project>