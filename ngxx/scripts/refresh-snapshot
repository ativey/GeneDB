#!/bin/bash

if [ $# -ne 2 ]; then
    echo "Usage: $0 dump-file proteininfo-directory" >&2
    exit 1
fi
dump="$1"
proteininfo="$2"

case "$proteininfo" in
  /*) ;;
  *) proteininfo="$(pwd)/$proteininfo" ;;
esac

ssh dmz-postgres psql <<PSQL
  drop database "snapshot-new";
  create database "snapshot-new";
PSQL

case "$dump" in
  *.gz) gzip -dc "$dump" | ssh dmz-postgres psql snapshot-new ;;
  *)    <"$dump" ssh dmz-postgres psql snapshot-new ;;
esac

ssh dmz-postgres bash <<'BASH'
  grants="$(mktemp /tmp/grants-XXXXXXXX)"
  psql --tuples-only snapshot-new << PSQL
  \o $grants
  select 'grant select on public."' || tablename || '" to genedb_ro;'
  from pg_tables
  where schemaname = 'public';

  select 'grant all on public."' || tablename || '" to genedb_rw;'
  from pg_tables
  where schemaname = 'public';

  select 'grant all on public."'|| sequence_name ||'" to genedb_rw;'
  from information_schema.sequences
  where sequence_schema = 'public';
  \o
  \i $grants
PSQL
  rm $grants
BASH

cd "$HOME/genedb/GeneDB/sql/cleanup"
for sql in *.sql; do
  echo "Running cleanup script $sql"
  <"$sql" ssh dmz-postgres psql snapshot-new
done

(
  cd "$HOME/genedb/GeneDB/genedb-access"
  ant -Dload=snapshot fix-residues
  for f in "$proteininfo"/*; do
    filename="${f##*/}"
    prefix="${filename%%.*}"
    suffix="${f##*.}"
    ant -Dload=snapshot -Dorganism="$prefix" -Dfile="$f" reload-"$suffix"
  done

  # Loaders that don't need a file
  for type in opi-references do
    ant -Dload=snapshot reload-"$type"
  done
)

ssh dmz-postgres bash <<'BASH'
  killkillkill="$(mktemp /tmp/killkillkill.XXXXXXXX)"
  psql --tuples-only << PSQL
  alter user genedb_ro nologin;
  \o $killkillkill
  select 'kill ' || procpid from pg_stat_activity where datname = 'snapshot' and usename = 'genedb_ro';
  \o
  \! . $killkillkill
  \! sleep 2
  drop database "snapshot-old";
  alter database "snapshot" rename to "snapshot-old";
  alter database "snapshot-new" rename to "snapshot";
  alter user genedb_ro login;
PSQL
  rm $killkillkill
BASH

